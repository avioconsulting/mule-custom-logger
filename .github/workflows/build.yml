name: Maven Build and Deploy

on:
  push:
    branches:
      - 'master'
      - 'feature/**'
  pull_request:
    branches:
      - 'master'

jobs:
  Build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
          server-id: github
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD

      - name: Cache for maven dependencies
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven

      - name: Set Version
        id: set-version
        run: echo ::set-output name=version::$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec)

      - name: Print Version
        run: echo "Version ${{ steps.set-version.outputs.version }}"

      - name: Compile
        run: mvn compile

      - name: Verify
        run: mvn --batch-mode verify

      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1
        if: always()
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          files: ./**/surefire-reports/*.xml

      # publish anything on master (including -SNAPSHOT)
      - name: Publish package
        if: ${{ github.event_name != 'pull_request' && env.GITHUB_REF_NAME == 'master' }}
        run: mvn --batch-mode deploy -DskipTests -X
        env:
          MAVEN_USERNAME: ${{ secrets.GIT_USER }}
          MAVEN_PASSWORD: ${{ secrets.GIT_TOKEN }}

      # Needs step to update pom groupId.

      - name: Publish Exchange Artifact
        if: $${{ !contains(steps.set-version.outputs.version, 'SNAPSHOT') && env.GITHUB_REF_NAME == 'master'}}  # Add master branch condition
        # need to fix this step, check for 'not snapshot' and then publish to AVIO exchange
        # Kevin (or Adam) has clientId / clientSecret / groupID
        # add profile - to publish to exchage -Pexchange
        # need credentials for exchange (start as project secret, will move to org secrets later)

        # A Release (next 3 steps) should only run on 'master' branch - Added 'GITHUB_REF_NAME' to check for master
        # Want original groupId in POM - com.avioconsulting.mule
      - name: Perform Release
        if: ${{ !contains(steps.set-version.outputs.version, 'SNAPSHOT') && github.event_name != 'pull_request' && env.GITHUB_REF_NAME == 'master'}}
        run: echo "Releasing version ${{ steps.set-version.outputs.version }}"

      - name: Perform Release
        if: ${{ !contains(steps.set-version.outputs.version, 'SNAPSHOT') && github.event_name != 'pull_request' && env.GITHUB_REF_NAME == 'master' }}
        env:
          GIT_USER: ${{ secrets.GIT_USER }}
          GIT_PASSWORD: ${{ secrets.GIT_TOKEN }}
        run: |
          git config --local credential.helper "!f() { echo username=\\GIT_USER; echo password=\\$GIT_PASSWORD; }; f"
          git config --global user.email "${{ secrets.GIT_EMAIL }}"
          git config --global user.name "${{ secrets.GIT_USER }}"
          git tag -a v${{ steps.set-version.outputs.version }} -m "Version ${{ steps.set-version.outputs.version }}"
          mvn clean build-helper:parse-version versions:set -DnewVersion=\${parsedVersion.majorVersion}.\${parsedVersion.minorVersion}.\${parsedVersion.nextIncrementalVersion}-SNAPSHOT -DprocessAllModules versions:commit
          find . -name 'pom.xml' | xargs git add
          git commit -m "Incrementing to next SNAPSHOT patch version"
          git push --follow-tags
      
      - name: Add Release Note and Create Github Release
        if: ${{ !contains(steps.set-version.outputs.version, 'SNAPSHOT') && github.event_name != 'pull_request' && env.GITHUB_REF_NAME == 'master'}}
        uses: release-drafter/release-drafter@v5
        with:
          version: ${{ steps.set-version.outputs.version }}
          tag: v${{ steps.set-version.outputs.version }}
          publish: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
